// // app/layout.jsx
// "use client"; // Use this directive to indicate this file is a client component

// import { useEffect, useState } from "react";
// import { Inter } from "next/font/google";
// import { ThemeProvider } from "@/components/theme-provider";

// const inter = Inter({ subsets: ["latin"] });

// export default function RootLayout({ children }) {
//   const [mounted, setMounted] = useState(false);

//   // Ensure component is mounted before applying client-side logic
//   useEffect(() => {
//     setMounted(true);
//   }, []);

//   // Only render the client-side logic once the component is mounted
//   return (
//     <html lang="en" className={inter.className} style={{ position: "fixed", top: 0, left: 0, overflow: "hidden", width: "100%", height: "100%" }}>
//       <body>
//         {mounted ? (
//           <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
//             {children}
//           </ThemeProvider>
//         ) : (
//           // Fallback render for SSR (without theme and dynamic changes)
//           <>{children}</>
//         )}
//       </body>
//     </html>
//   );
// }






// step 2
// import {
//   ClerkProvider,
//   SignInButton,
//   SignUpButton,
//   SignedIn,
//   SignedOut,
//   UserButton,
// } from '@clerk/nextjs';
// import { Geist, Geist_Mono } from 'next/font/google';
// import './globals.css';

// const geistSans = Geist({
//   variable: '--font-geist-sans',
//   subsets: ['latin'],
// });

// const geistMono = Geist_Mono({
//   variable: '--font-geist-mono',
//   subsets: ['latin'],
// });

// export const metadata = {
//   title: 'Clerk Next.js Quickstart',
//   description: 'Generated by create next app',
// };

// export default function RootLayout({ children }) {
//   return (
//     <ClerkProvider>
//       <html lang="en">
//         <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//           <header className="flex justify-end items-center p-4 gap-4 h-16">
//             <SignedOut>
//               <SignInButton />
//               <SignUpButton />
//             </SignedOut>
//             <SignedIn>
//               <UserButton />
//             </SignedIn>
//           </header>
//           {children}
//         </body>
//       </html>
//     </ClerkProvider>
//   );
// }






'use client';

import { useEffect, useState } from 'react';
import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  RedirectToSignIn,
  UserButton,
} from '@clerk/nextjs';
import { Geist, Geist_Mono } from 'next/font/google';
import { ThemeProvider } from '@/components/theme-provider';
import './globals.css';

import UserSyncer from '@/components/sync-user';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export default function RootLayout({ children }) {
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  return (
    <ClerkProvider>
      <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          {mounted ? (
            <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
              <SignedIn>
              <UserSyncer />
                {children}
              </SignedIn>

              <SignedOut>
                <RedirectToSignIn />
              </SignedOut>
            </ThemeProvider>
          ) : (
            <>{children}</>
          )}
        </body>
      </html>
    </ClerkProvider>
  );
}
